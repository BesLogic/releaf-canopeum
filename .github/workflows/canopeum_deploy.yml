name: canopeum_frontend_deploy

on:
  workflow_dispatch: #  Allows manual builds
  # TODO: Add inputs to decide whether frontend and/or backend are deployed

jobs:
  BuildFrontend:
    name: Build & Deploy Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: canopeum_frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get datetime
        id: datetime
        run: echo DATETIME=$(date +'%Y-%m-%d-%H-%M') >> $GITHUB_OUTPUT
      - name: Publish Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./canopeum_frontend
          file: canopeum_frontend/Dockerfile
          push: true
          tags: ghcr.io/beslogic/canopeum_frontend:latest,ghcr.io/beslogic/canopeum_frontend:${{steps.datetime.outputs.DATETIME}}
      - name: Create and push git tag
        continue-on-error: true
        run: |
          git tag ${{steps.datetime.outputs.DATETIME}}
          git push origin --tags

  BuildBackend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: canopeum_backend
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get datetime
        id: datetime
        run: echo DATETIME=$(date +'%Y-%m-%d-%H-%M') >> $GITHUB_OUTPUT
      - name: Publish Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./canopeum_backend
          file: canopeum_backend/Dockerfile
          push: true
          tags: ghcr.io/beslogic/canopeum_backend:latest,ghcr.io/beslogic/canopeum_backend:${{steps.datetime.outputs.DATETIME}}
  TagRelease:
    runs-on: ubuntu-latest
    needs: [BuildFrontend, BuildBackend]
    # If at least one publication succeeded
    if: always() && contains(needs.*.result, 'success')
    steps:
      # TODO: Share output across jobs to avoid rewriting this step
      - name: Get datetime
        id: datetime
        run: echo DATETIME=$(date +'%Y-%m-%d-%H-%M') >> $GITHUB_OUTPUT
      - name: Create and push git tag
        continue-on-error: true
        run: |
          git tag ${{steps.datetime.outputs.DATETIME}}
          git push origin --tags
